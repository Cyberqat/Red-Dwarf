Project Darkstar Example C Client

INTRODUCTION

This directory contains example code for developing clients in the C
programming language that can communicate with the Project Darkstar
Server.


CONTENTS

- chatclient
  Source code for a simple chat example

- etc
  Platform makefiles

- sgs
  Source code for the example C client implementation

- test
  Source code for tests


BUILDING

Unix:

- Ensure that the files etc/sgs.mk and etc/$(UNAME).mk
  contain appropriate settings for your platform.

- Invoke GNU make at the top level:
    % make
  or
    % gmake

- To build the tests:
    % cd test
    % make

- To build the chat client example:
    % cd chatclient
    % make

Windows:

- Ensure that the appropriate compiler tools are available in
  your %Path%.  See env.bat for an example.

- Ensure that the files nmake.mak and etc/nmake.mk contain
  appropriate settings for your platform.  In particular,
  you may need to adjust the paths to the compiler includes and
  libraries in etc/nmake.mk.

- At the top level, invoke nmake.exe:
    > nmake.exe /F nmake.mak

- To build the tests:
    % cd test
    % nmake.exe /F nmake.mak


RUNNING TESTS

- After building the tests (see above), the resulting test
  executables can be run manually.  For example, on Unix:

    % cd test
    % ./buffer_test

  ...and so on with the other test executables.
  

RUNNING THE CHAT CLIENT

The chat client example requires a server with the
Hello Channels tutorial application running.

After building the chat client (see above), invoke the resulting
executable.  For example, on Unix:

    % cd chatclient
    % ./chat_client -p 1139

Type "help" at the command prompt for a list of commands.

A simple example of a chat session:

    > login user1 mypass
    > chsend Foo hello
    > srvsend test_direct_send
    > logout
    > quit

Note that the chat client example includes commands that are not
understood by the tutorial application and will simply be echoed
to the server log.


KNOWN ISSUES

This example has the following limitations:

- The Windows implementation is incomplete; the networking code
  needs to be ported to the Winsock2 API.

